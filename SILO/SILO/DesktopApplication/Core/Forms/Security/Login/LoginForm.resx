<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>